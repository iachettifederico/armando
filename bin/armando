#!/usr/bin/env ruby

$:.unshift(File.expand_path("../../lib", __FILE__))

require "armando"

require "optparse"

original_arguments = ARGV.dup
options = {}
var_sets = {}

option_parser = OptionParser.new do |opts|
  opts.banner = "Usage:"

  # opts.on('-v', '--[no-]verbose', 'Run verbosely') do |a|
  #   options[:verbose] = a
  # end

  opts.on('--var a=b', 'Set a variable') do |var_value|
    var, value = var_value.split('=')
    var_sets[var] = value
  end

  opts.on('--variables', 'Show current variables') do |a|
    options[:show_variables] = a
  end

end

option_parser.parse!

configuration = {
  'TEMPLATES_DIR' => var_sets.fetch('TEMPLATES_DIR'){ File.join(Dir.home, 'ArmandoTemplates')}
}


if options[:show_variables]
  configuration.each do |variable, value|
    puts "#{variable}: #{value}"
  end
  exit
end

generator = ARGV[0]
arguments = ARGV[1..-1]

Armando.for(generator, arguments, configuration).generate!
